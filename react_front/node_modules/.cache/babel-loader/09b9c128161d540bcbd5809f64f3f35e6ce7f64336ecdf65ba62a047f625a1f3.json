{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\Pokemon_App\\\\react_front\\\\src\\\\components\\\\CompWithAI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport openai from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompWithAI = () => {\n  _s();\n  const [generatedText, setGeneratedText] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await openai.Completion.create({\n          engine: 'text-davinci-003',\n          // Puedes elegir el motor apropiado\n          prompt: 'Escribe aquí tu contexto o pregunta...',\n          max_tokens: 100 // Ajusta según sea necesario\n        });\n        setGeneratedText(response.choices[0].text);\n      } catch (error) {\n        console.error('Error fetching data from OpenAI:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: generatedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CompWithAI, \"8iVuCU3D908IsCpHufRyqcfB7a4=\");\n_c = CompWithAI;\nexport default CompWithAI;\nvar _c;\n$RefreshReg$(_c, \"CompWithAI\");","map":{"version":3,"names":["React","useState","useEffect","openai","jsxDEV","_jsxDEV","CompWithAI","_s","generatedText","setGeneratedText","fetchData","response","Completion","create","engine","prompt","max_tokens","choices","text","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/Pokemon_App/react_front/src/components/CompWithAI.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport openai from 'openai';\r\n\r\nconst CompWithAI = () => {\r\n  const [generatedText, setGeneratedText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await openai.Completion.create({\r\n          engine: 'text-davinci-003', // Puedes elegir el motor apropiado\r\n          prompt: 'Escribe aquí tu contexto o pregunta...',\r\n          max_tokens: 100, // Ajusta según sea necesario\r\n        });\r\n\r\n        setGeneratedText(response.choices[0].text);\r\n      } catch (error) {\r\n        console.error('Error fetching data from OpenAI:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>{generatedText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompWithAI;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,UAAU,CAACC,MAAM,CAAC;UAC9CC,MAAM,EAAE,kBAAkB;UAAE;UAC5BC,MAAM,EAAE,wCAAwC;UAChDC,UAAU,EAAE,GAAG,CAAE;QACnB,CAAC,CAAC;QAEFP,gBAAgB,CAACE,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;MAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAAgB,QAAA,EAAIb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BID,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}