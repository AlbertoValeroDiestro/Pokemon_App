{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\Pokemon_App\\\\react_front\\\\src\\\\components\\\\CompWithAI.jsx\",\n  _s = $RefreshSig$();\n// CompWithAI.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompWithAI = () => {\n  _s();\n  const [generatedText, setGeneratedText] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/generate-text', {\n          method: 'POST'\n        });\n        const data = await response.json();\n        setGeneratedText(data.generatedText);\n      } catch (error) {\n        console.error('Error fetching data from backend:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: generatedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CompWithAI, \"8iVuCU3D908IsCpHufRyqcfB7a4=\");\n_c = CompWithAI;\nexport default CompWithAI;\nvar _c;\n$RefreshReg$(_c, \"CompWithAI\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CompWithAI","_s","generatedText","setGeneratedText","fetchData","response","fetch","method","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alber/Desktop/Pokemon_App/react_front/src/components/CompWithAI.jsx"],"sourcesContent":["// CompWithAI.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst CompWithAI = () => {\r\n  const [generatedText, setGeneratedText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/generate-text', {\r\n          method: 'POST',\r\n        });\r\n\r\n        const data = await response.json();\r\n        setGeneratedText(data.generatedText);\r\n      } catch (error) {\r\n        console.error('Error fetching data from backend:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>{generatedText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompWithAI;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,gBAAgB,CAACK,IAAI,CAACN,aAAa,CAAC;MACtC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAAa,QAAA,EAAIV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBID,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}